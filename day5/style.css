.container
  :is(
    .row1,
    .row2,
    .row3,
    .row4,
    .row5,
    .row6,
    .row7,
    .row8,
    .row9,
    .row10,
    .row11
  ) {
  display: grid;
  grid-template-columns: repeat(11, 1fr);
  gap: 10px;
  padding-top: 10px;
  max-width: 800px;
  margin: 0 auto;
}

.row1 .cell:nth-child(6) {
  background-color: green;
}

.row2 .cell:nth-child(6) {
  background-color: green;
}

.row3 .cell:nth-child(n + 5):nth-child(-n + 7):not(:nth-child(6)) {
  background-color: green;
}

.row3 .cell:nth-child(6) {
  background-color: yellow;
}

.row4 .cell:nth-child(n + 4):nth-child(-n + 8):not(:nth-child(7)) {
  background-color: green;
}

.row4 .cell:nth-child(7){
  background-color: yellow;
}

.row5 .cell:nth-child(n + 4):nth-child(-n + 8){
  background-color: green;
}

.row6 .cell:nth-child(n + 3):nth-child(-n + 9):not(:nth-child(6)) {
  background-color: green;
}

.row6 .cell:nth-child(6){
  background-color: yellow;
}

.row7 .cell:nth-child(n + 2):nth-child(-n + 10):not(:nth-child(4)):not(:nth-child(10)) {
  background-color: green;
}

.row7 .cell:nth-child(4),
.row7 .cell:nth-child(10) {
  background-color: yellow;
}

.row8 .cell:nth-child(n + 2):nth-child(-n + 10):not(:nth-child(5)):not(:nth-child(8)) {
  background-color: green;
}

.row8 .cell:nth-child(5),
.row8 .cell:nth-child(8) {
  background-color: yellow;
}

.row9 .cell:nth-child(n + 1):nth-child(-n + 11):not(:nth-child(2)):not(:nth-child(10)) {
  background-color: green;
}

.row9 .cell:nth-child(2),
.row9 .cell:nth-child(10) {
  background-color: yellow;
}

.row10 .cell:nth-child(n + 1):nth-child(-n + 11):not(:nth-child(4)):not(:nth-child(7)) {
  background-color: green;
}

.row10 .cell:nth-child(4),
.row10 .cell:nth-child(7) {
  background-color: yellow;
}

.row11 .cell:nth-child(n + 5):nth-child(-n + 7){
  background-color: rgb(49, 2, 2);
}

.cell {
  aspect-ratio: 1;
  background-color: #e5e5e5;
  border-radius: 20px;
  transition: all 0.3s ease;
}

.cell:hover {
  transform: scale(1.1);
  background-color: #b7b7b7;
  cursor: pointer;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: scale(0.5);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.cell {
  animation: fadeIn 0.5s ease forwards;
}

.container {
  counter-reset: cell-counter;
}

.cell {
  counter-increment: cell-counter;
  animation-delay: calc(0.05s * var(--index));
}
